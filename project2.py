# -*- coding: utf-8 -*-
"""project2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hiwKoWCf4kv_FrMrYdVVpydJEoqE-a-I

**Objective**:

The aim of this project is to determine the number of nice (**N**), rainy (**R**), and snowy (**S**) days in the Land of Oz during a 30-day month. We have access to weather data recorded over a 500-day period.

**Data Collection**:

We begin by extracting probabilities from the provided data for the three distinct weather types. Combination such as "Snow and Rain" (**SR**), "Rain and Rain" (**RR**), and "Nice and Snow" (**NS**) are possible. This leads to the following sets: '**SS**', '**SR**', '**SN**', '**RR**', '**RS**', '**RN**', '**NR**', and '**NS**'.

**Data Processing**:

Eight counters are initialized to zero, each representing a specific weather set. The program iterates through the 500 days of data in pairs to determine the frequency of each set's occurrence. Once the counts for each pair are obtained, the script displays the number of occurrences for each distinct combination.
"""

days = "SSRNRNSSSSSSNRSNSSRNSRNSSSNSRRRNSSSNRRSSSSNRSSNSRRRRRRNSSSSSRRRSNSNRRRRSRSRNSNSRRNRRNRSSNSRNRNSSRRSRNSSSNRSRRSSNRSNRRNSSSSNSSNSRSRRNSSNSSRNSSRRNRRRSRNRRRNSSSNRNSRNSNRNRSSSRSSNRSSSNSSSSSSNSSSNSNSRRNRNRRRRSRRRSSSSNRRSSSSRSRRRNRRRSSSSRRNRRRSRSSRRRRSSRNRRRRRRNSSRNRSSSNRNSNRRRRNRRRNRSNRRNSRRSNRRRRSSSRNRRRNSNSSSSSRRRRSRNRSSRRRRSSSRRRNRNRRRSRSRNSNSSRRRRRNSNRNSNRRNRRRRRRSSSNRSSRSNRSSSNSNRNSNSSSNRRSRRRNRRRRNRNRSSSNSRSNRNRRSNRRNSRSSSRNSRRSSNSRRRNRRSNRRNSSSSSNRNSSSSSSSNRNSRRRNSSRRRNSSSNRRSRNSSRRNRRNRSNRRRR "

# Initialize counters for 'SS', 'SR', 'SN', 'RR', 'RS', 'RN', 'NR', and 'NS'.
count_SS = 0
count_SR = 0
count_SN = 0
count_RR = 0
count_RS = 0
count_RN = 0
count_NR = 0
count_NS = 0

j = 0
# Loop through the string and check for pairs
for i in range(0, len(days)):
  j = j + 1
  pair = days[i:i+2]
  if pair == "SS":
    count_SS += 1
  elif pair == "SR":
    count_SR += 1
  elif pair == "SN":
    count_SN += 1
  elif pair == "RR":
    count_RR += 1
  elif pair == "RS":
    count_RS += 1
  elif pair == "RN":
    count_RN += 1
  elif pair == "NR":
    count_NR += 1
  elif pair == "NS":
    count_NS += 1
  else:
    print(pair)
    print(i)

# Print
print(f"SS count: {count_SS}")
print(f"SR count: {count_SR}")
print(f"SN count: {count_SN}")
print(f"RR count: {count_RR}")
print(f"RS count: {count_RS}")
print(f"RN count: {count_RN}")
print(f"NR count: {count_NR}")
print(f"NS count: {count_NS}")

"""For each distinct combination, the number of occurrences and the total for each weather condition are presented below:

Total **S**: 191
  - **SS**: 95
  - **SR**: 49
  - **SN**: 47

Total **R**: 204
  - **RR**: 101
  - **RS**: 46
  - **RN**: 57

Total **N**: 104
  - **NR**: 55
  - **NS**: 49

**Methodology**:

To determine the number of days in a 30-day month with varying weather conditions, we employ two key variables. The transitional matrix, represented as **P**, encapsulates the probabilities of transitioning from one weather condition to another, calculated by dividing the number of occurrences by the total of each specified weather condition. To set up the matrix in the system of equations, the transpose of **P** is calculated and subtracted from the identity matrix **I** of the same dimension. For the sum constraint, a row of ones is added to ensure that the sum of the stationary distribution is equal to 1. The equation is then solved using the least-squares method.
"""

# Libraries needed
import numpy as np
import sympy as sp

# Define the transition matrix
P = np.array([[0, 0.528846, 0.4711538],
              [0.2794118, 0.495098, 0.2254902],
              [0.2460733, 0.256545, 0.4973822]], dtype=np.float64)

# Calculate the stationary distribution
# We solve πP = π, which can be rewritten as π(P.T - I) = 0,
# where I is the identity matrix
# We add a constraint that the sum of π must be 1

# Create the augmented matrix for the system
n = P.shape[0]
A = np.vstack((P.T - np.eye(n), np.ones(n)))
b = np.zeros(n + 1)
b[-1] = 1  # The sum of the probabilities should be 1

# Solve the system using least squares
solution = np.linalg.lstsq(A, b, rcond=None)[0]

# The solution gives us the stationary distribution
print("Stationary distribution:", solution)

"""**Results**:

After obtaining the stationary distribution, the outputs are summed to verify if the result equals 1. This verification confirms the accuracy of the outputs. Once the summation is checked, each output is multiplied by 30, representing the proposed 30-day month. This multiplication provides us with the number of nice (**N**), rain (**R**), and snow (**S**) days in the Land of Oz during a 30-day month.

0.2084879
\+ 0.41147501 + 0.38003708 = **1**

0.2084879 x 30 = **6.254638** = **N**ice

0.41147501 x 30 = **12.344247** = **R**ain

0.38003708 x 30 = **11.4011151** = **S**now


TOTAL       30 days

This script simulates the changing distribution of days throughout a month in the Land of Oz, leveraging a transitional matrix to model the probabilities of transitioning between different weather conditions. The resulting distribution, obtained after 30 iterations, provides valuable insights into the expected weather patterns based on the defined probabilities.
"""